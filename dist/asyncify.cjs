"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const DATA_ADDR=16,WRAPPED_EXPORTS=new WeakMap;function isPromise(t){return!!t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof t.then}class Asyncify{constructor(){this.state={type:"Loading"},this.exports=null}invalidState(){throw new Error(`Invalid async state ${this.state.type}`)}reset(){this.state={type:"None"}}wrapImportFn(t){return(...e)=>{switch(this.state.type){case"None":{let s=t(...e);return isPromise(s)?(this.exports.asyncify_start_unwind(DATA_ADDR),this.state={type:"Unwinding",promise:s},0):s}case"Rewinding":{let{value:t}=this.state;return this.reset(),this.exports.asyncify_stop_rewind(),t}default:this.invalidState()}}}wrapModuleImports(t){let e={};for(let s in t){let n=t[s];"function"==typeof n&&(n=this.wrapImportFn(n)),e[s]=n}return e}wrapImports(t){if(void 0===t)return;let e={};for(let s in t)e[s]=this.wrapModuleImports(t[s]);return e}wrapExportFn(t){let e=WRAPPED_EXPORTS.get(t);return void 0!==e?e:(e=async(...e)=>{"None"!==this.state.type&&this.invalidState();let s=t(...e);for(;"Unwinding"===this.state.type;){let e,{promise:n}=this.state;this.reset(),this.exports.asyncify_stop_unwind(),this.state={type:"Waiting"};try{e=await n}finally{this.reset()}this.exports.asyncify_start_rewind(DATA_ADDR),this.state={type:"Rewinding",value:e},s=t()}return"None"!==this.state.type&&this.invalidState(),s},WRAPPED_EXPORTS.set(t,e),e)}wrapExports(t){let e=WRAPPED_EXPORTS.get(t);if(void 0!==e)return e;e=Object.create(null);for(let s in t){let n=t[s];"function"!=typeof n||s.startsWith("asyncify_")||(n=this.wrapExportFn(n)),Object.defineProperty(e,s,{enumerable:!0,value:n})}return WRAPPED_EXPORTS.set(t,e),e}init(t){const{exports:e}=t,s=new Int32Array(e.memory.buffer,DATA_ADDR);s[0]=DATA_ADDR+8,s[1]=512,this.reset(),this.exports=this.wrapExports(e),Object.setPrototypeOf(t,Instance.prototype)}}class Instance extends WebAssembly.Instance{constructor(t,e){let s=new Asyncify;super(t,s.wrapImports(e)),s.init(this)}get exports(){return WRAPPED_EXPORTS.get(super.exports)}}async function instantiate(t,e){let s=new Asyncify,n=await WebAssembly.instantiate(t,s.wrapImports(e));return s.init(n.instance),n}async function instantiateStreaming(t,e){let s=new Asyncify,n=await WebAssembly.instantiateStreaming(t,s.wrapImports(e));return s.init(n.instance),n}Object.defineProperty(Instance.prototype,"exports",{enumerable:!0}),exports.Instance=Instance,exports.instantiate=instantiate,exports.instantiateStreaming=instantiateStreaming;
